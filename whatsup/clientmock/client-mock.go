// Code generated by MockGen. DO NOT EDIT.
// Source: ../whatsup/client.go

// Package clientmock is a generated GoMock package.
package clientmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	glitch "github.com/sprak3000/go-glitch/glitch"
	status "github.com/sprak3000/go-whatsup-client/status"
)

// MockStatusPageClient is a mock of StatusPageClient interface.
type MockStatusPageClient struct {
	ctrl     *gomock.Controller
	recorder *MockStatusPageClientMockRecorder
}

// MockStatusPageClientMockRecorder is the mock recorder for MockStatusPageClient.
type MockStatusPageClientMockRecorder struct {
	mock *MockStatusPageClient
}

// NewMockStatusPageClient creates a new mock instance.
func NewMockStatusPageClient(ctrl *gomock.Controller) *MockStatusPageClient {
	mock := &MockStatusPageClient{ctrl: ctrl}
	mock.recorder = &MockStatusPageClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusPageClient) EXPECT() *MockStatusPageClientMockRecorder {
	return m.recorder
}

// Slack mocks base method.
func (m *MockStatusPageClient) Slack() (status.Details, glitch.DataError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Slack")
	ret0, _ := ret[0].(status.Details)
	ret1, _ := ret[1].(glitch.DataError)
	return ret0, ret1
}

// Slack indicates an expected call of Slack.
func (mr *MockStatusPageClientMockRecorder) Slack() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Slack", reflect.TypeOf((*MockStatusPageClient)(nil).Slack))
}

// StatuspageIoService mocks base method.
func (m *MockStatusPageClient) StatuspageIoService(serviceName, pageURL string) (status.Details, glitch.DataError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StatuspageIoService", serviceName, pageURL)
	ret0, _ := ret[0].(status.Details)
	ret1, _ := ret[1].(glitch.DataError)
	return ret0, ret1
}

// StatuspageIoService indicates an expected call of StatuspageIoService.
func (mr *MockStatusPageClientMockRecorder) StatuspageIoService(serviceName, pageURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StatuspageIoService", reflect.TypeOf((*MockStatusPageClient)(nil).StatuspageIoService), serviceName, pageURL)
}
